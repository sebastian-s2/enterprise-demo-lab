# Copyright (c) 2023-2024 Arista Networks, Inc.
# Use of this source code is governed by the Apache License 2.0
# that can be found in the LICENSE file.
# yaml-language-server: $schema=../../../../plugins/plugin_utils/schema/avd_meta_schema.json
# Line above is used by RedHat's YAML Schema vscode extension
# Use Ctrl + Space to get suggestions for every field. Autocomplete will pop up after typing 2 letters.
type: dict
$defs:
  node_type_l3_interfaces:
    type: list
    primary_key: name
    items:
      type: dict
      keys:
        name:
          type: str
          description: |-
            Ethernet interface name like 'Ethernet2' or subinterface name like 'Ethernet2.42'.
            For a subinterface, the parent physical interface is automatically created.
          pattern: "Ethernet[\\d/]+(.[\\d]+)?"
        description:
          type: str
          description: |-
            Interface description.
            If not set a default description will be configured with '[<peer>[ <peer_interface>]]'.
        ip_address:
          type: str
          description: Node IPv4 address/Mask or 'dhcp'.
        dhcp_ip:
          type: str
          description: |-
            When the `ip_address` is `dhcp`, this optional field allows to indicate the expected
            IPv4 address (without mask) to be allocated on the interface if known.
            This is not rendered in the configuration but can be used for substitution of 'interface_ip' in the Access-list
            set under `ipv4_acl_in` and `ipv4_acl_out`.
        public_ip:
          type: str
          description: |-
            Node IPv4 address (no mask).

            This is used to get the public IP (if known) when the device is behind NAT.
            This is only used for `wan_rr` routers (AutoVPN RRs and Pathfinders) to determine the Public IP
            with the following preference:
              `wan_route_servers.path_groups.interfaces.ip_address`
                  -> `l3_interfaces.public_ip`
                      -> `l3_interfaces.ip_address`

            The determined Public IP is used by WAN routers when peering with this interface.
        encapsulation_dot1q_vlan:
          description: For subinterfaces the dot1q vlan is derived from the interface name by default, but can also be specified.
          type: int
          convert_types:
            - str
          min: 1
          max: 4094
        dhcp_accept_default_route:
          type: bool
          default: true
          description: Accept a default route from DHCP if `ip_address` is set to `dhcp`.
        enabled:
          type: bool
          default: true
          description: Enable or Shutdown the interface.
        speed:
          type: str
          description: |-
            Speed should be set in the format `<interface_speed>` or `forced <interface_speed>` or `auto <interface_speed>`.
        peer:
          type: str
          description: |-
            The peer device name. Used for description and documentation.
        peer_interface:
          type: str
          description: |-
            The peer device interface. Used for description and documentation.
        peer_ip:
          type: str
          description: |-
            The peer device IPv4 address (no mask). Used as default route gateway if `set_default_route` is true and `ip` is an IP address.
        ipv4_acl_in:
          description: |-
            Name of the IPv4 access-list to be assigned in the ingress direction.
            The access-list must be defined under `ipv4_acls` and supports field substitution for "interface_ip" and "peer_ip".
            Required for all WAN interfaces (`wan_carrier` is set) unless the carrier is marked as 'trusted' under `wan_carriers`.
          type: str
          convert_types:
            - int
        ipv4_acl_out:
          description: |-
            Name of the IPv4 Access-list to be assigned in the egress direction.
            The access-list must be defined under `ipv4_acls` and supports field substitution for "interface_ip" and "peer_ip".
          type: str
          convert_types:
            - int
        static_routes:
          description: Configure IPv4 static routes pointing to `peer_ip`.
          type: list
          min_length: 1
          items:
            type: dict
            keys:
              prefix:
                type: str
                required: true
                description: IPv4_network/Mask.
        qos_profile:
          type: str
          description: QOS service profile.
        wan_carrier:
          type: str
          description: |-
            The WAN carrier this interface is connected to.
            This is used to infer the path-groups in which this interface should be configured.
            Unless the carrier is marked as 'trusted' under `wan_carriers`, `ipv4_acl_in` is also required on all WAN interfaces.
        wan_circuit_id:
          type: str
          convert_types:
            - int
          description: |-
            The WAN circuit ID for this interface.
            This is not rendered in the configuration but used for WAN designs.
        connected_to_pathfinder:
          type: bool
          default: true
          description: |-
            For a WAN interface (`wan_carrier` is set), allow to disable the static tunnel towards Pathfinders.
        cv_pathfinder_internet_exit:
          description: |-
            PREVIEW: This key is in preview mode
          type: dict
          keys:
            policies:
              type: list
              primary_key: name
              description: List of Internet-exit policies using this interface as exit.
              items:
                type: dict
                keys:
                  name:
                    type: str
                    description: Internet-exit policy name.
                  tunnel_interface_numbers:
                    type: str
                    description: |-
                      Number range to use for Tunnel interfaces to an internet-exit service provider using this local interface.
                      Examples: '1-3' or '100,200,300'
        raw_eos_cli:
          type: str
          description: EOS CLI rendered directly on the interface in the final EOS configuration.
        flow_tracking:
          type: dict
          $ref: "eos_designs#/$defs/flow_tracking_link"
          description: |-
            Configures flow-tracking on the interface. Overrides `fabric_flow_tracking.l3_interfaces` setting.
        structured_config:
          type: dict
          documentation_options:
            hide_keys: true
          description: |-
            Custom structured config for the Ethernet interface.
          $ref: "eos_cli_config_gen#/keys/ethernet_interfaces/items"
